name: openwrt-Build-v24.10.0

on:
  workflow_dispatch:
  push:
    branches:
      - v24.10.0
  

env:
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: "释放部分系统空间"
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: false

          # all of these default to true, but feel free to set to
          # false if necessary for your workflow
          android: true
          dotnet: true
          haskell: true
          large-packages: false
          swap-storage: false

      - name: "拉取项目源码"
        uses: actions/checkout@v4

      - name: "编译系统初始化"
        run: |
          sudo apt-get update
          sudo apt-get install -y time git-core subversion build-essential g++ bash make libssl-dev patch libncurses5 libncurses5-dev zlib1g-dev gawk flex gettext wget unzip xz-utils python3-distutils-extra python3 python3-distutils-extra python3-setuptools swig rsync curl libsnmp-dev liblzma-dev libpam0g-dev cpio rsync gcc-multilib 
          sudo apt-get autoremove --purge
          sudo apt-get clean
          sudo timedatectl set-timezone "$TZ"


      - name: "更新feeds"
        run: ./scripts/feeds update -a

      - name: "安装其他feeds 软件"
        run: |
          rm -rf feeds/packages/lang/golang
          git clone https://github.com/sbwml/packages_lang_golang -b 23.x feeds/packages/lang/golang

      - name: "安装feeds"
        run: ./scripts/feeds install -a

      - name: "package feeds拉取额外软件"
        run: |
          mkdir package/extra
          cd package/extra
          git clone https://github.com/jerrykuku/luci-theme-argon.git -b v2.3.2
          git clone https://github.com/zhengmz/luci-app-zerotier.git --depth=1 


      - name: "编译器 缓存 "
        uses: actions/cache@v3
        env:
          cache-name: openwrt-ccache-${{ runner.os }}-${{github.workflow}}
        with:
          path: |
            staging_dir/ 
            build_dir/
            dl/
          key: ${{ env.cache-name }}

      - name: "下载编译所需软件源码"
        run: |
          cp 1.config .config 
          grep passwall .config 
          make download -j$(nproc)|| make download -j1 V=s

      - name: "开始编译"
        run: make -j$(nproc) || make download -j1 V=s

      - name: "上传编译产物"
        uses: actions/upload-artifact@v4
        with:
          name: openwrt_bin_${{github.workflow}}_${{github.run_number}}
          path: bin/